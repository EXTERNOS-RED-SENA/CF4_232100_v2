{"remainingRequest":"/home/runner/work/CF4_232100_v2/CF4_232100_v2/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/runner/work/CF4_232100_v2/CF4_232100_v2/src/views/Tema5.vue?vue&type=template&id=32686e08&lang=pug","dependencies":[{"path":"/home/runner/work/CF4_232100_v2/CF4_232100_v2/src/views/Tema5.vue","mtime":1734313979523},{"path":"/home/runner/work/CF4_232100_v2/CF4_232100_v2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/CF4_232100_v2/CF4_232100_v2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/CF4_232100_v2/CF4_232100_v2/node_modules/babel-loader/lib/index.js","mtime":456789000000},{"path":"/home/runner/work/CF4_232100_v2/CF4_232100_v2/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/runner/work/CF4_232100_v2/CF4_232100_v2/node_modules/pug-plain-loader/index.js","mtime":499162500000},{"path":"/home/runner/work/CF4_232100_v2/CF4_232100_v2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/CF4_232100_v2/CF4_232100_v2/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}