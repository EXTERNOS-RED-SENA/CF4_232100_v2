{"remainingRequest":"/home/runner/work/CF4_232100_v2/CF4_232100_v2/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/runner/work/CF4_232100_v2/CF4_232100_v2/src/views/Glosario.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/runner/work/CF4_232100_v2/CF4_232100_v2/src/views/Glosario.vue","mtime":1734313979522},{"path":"/home/runner/work/CF4_232100_v2/CF4_232100_v2/node_modules/babel-loader/lib/index.js","mtime":456789000000},{"path":"/home/runner/work/CF4_232100_v2/CF4_232100_v2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/CF4_232100_v2/CF4_232100_v2/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBwbGFudGlsbGFNaXhpbnMgZnJvbSAnQC9qcy9wbGFudGlsbGFNaXhpbnMnCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnR2xvc2FyaW8nLAogIG1peGluczogW3BsYW50aWxsYU1peGluc10sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGdsb3NhcmlvRGF0YTogWwogICAgICAgIHsKICAgICAgICAgIHRlcm1pbm86ICdBZ3JpY3VsdHVyYSBkZSBwcmVjaXNpw7NuJywKICAgICAgICAgIHNpZ25pZmljYWRvOgogICAgICAgICAgICAnU2lzdGVtYSBkZSBnZXN0acOzbiBhZ3LDrWNvbGEgcXVlIHV0aWxpemEgdGVjbm9sb2fDrWFzIGNvbW8gU0lHLCBHUFMgeSBzZW5zb3JlcyBJb1QgcGFyYSByZWNvcGlsYXIsIHByb2Nlc2FyIHkgYW5hbGl6YXIgZGF0b3MgZW4gdGllbXBvIHJlYWwsIG9wdGltaXphbmRvIHJlY3Vyc29zLicsCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICB0ZXJtaW5vOiAnQWdyaWN1bHR1cmEgc29zdGVuaWJsZScsCiAgICAgICAgICBzaWduaWZpY2FkbzoKICAgICAgICAgICAgJ1Byw6FjdGljYXMgYWdyw61jb2xhcyBxdWUgYnVzY2FuIG9wdGltaXphciBlbCB1c28gZGUgcmVjdXJzb3MgbmF0dXJhbGVzIHkgcmVkdWNpciBlbCBpbXBhY3RvIGFtYmllbnRhbCwgZ2FyYW50aXphbmRvIGxhIHByb2R1Y3RpdmlkYWQgYSBsYXJnbyBwbGF6by4nLAogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgdGVybWlubzogJ0dlb2VzdGFkw61zdGljYScsCiAgICAgICAgICBzaWduaWZpY2FkbzoKICAgICAgICAgICAgJ1JhbWEgZGUgbGEgZXN0YWTDrXN0aWNhIHF1ZSBhbmFsaXphIHkgbW9kZWxhIGxhIGRpc3RyaWJ1Y2nDs24gZGUgdmFyaWFibGVzIGVuIGVsIGVzcGFjaW8sIHV0aWxpemFkYSBwYXJhIGVzdHVkaWFyIGxhIHZhcmlhYmlsaWRhZCBlc3BhY2lhbCBlbiBsYSBhZ3JpY3VsdHVyYS4nLAogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgdGVybWlubzogJ0ludGVycG9sYWNpw7NuIElEVycsCiAgICAgICAgICBzaWduaWZpY2FkbzoKICAgICAgICAgICAgJ03DqXRvZG8gZGUgZXN0aW1hY2nDs24gcXVlIGFzaWduYSB2YWxvcmVzIGEgcHVudG9zIGRlc2Nvbm9jaWRvcyBiYXPDoW5kb3NlIGVuIGxhIGRpc3RhbmNpYSBhIHB1bnRvcyBjb25vY2lkb3MsIHN1cG9uaWVuZG8gcXVlIGxvcyBwdW50b3MgbcOhcyBjZXJjYW5vcyBzb24gbcOhcyBzaW1pbGFyZXMuJywKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgIHRlcm1pbm86ICdLcmlnaW5nJywKICAgICAgICAgIHNpZ25pZmljYWRvOgogICAgICAgICAgICAnVMOpY25pY2EgZGUgaW50ZXJwb2xhY2nDs24gZ2VvZXN0YWTDrXN0aWNhIHF1ZSBubyBzb2xvIGVzdGltYSB2YWxvcmVzIGRlc2Nvbm9jaWRvcywgc2lubyBxdWUgdGFtYmnDqW4gbWlkZSBsYSBpbmNlcnRpZHVtYnJlIGRlIGRpY2hhcyBlc3RpbWFjaW9uZXMuJywKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgIHRlcm1pbm86ICdNYXBhcyB0ZW3DoXRpY29zJywKICAgICAgICAgIHNpZ25pZmljYWRvOgogICAgICAgICAgICAnUmVwcmVzZW50YWNpb25lcyBncsOhZmljYXMgZ2VuZXJhZGFzIGVuIFNJRyBxdWUgbXVlc3RyYW4gbGEgZGlzdHJpYnVjacOzbiBlc3BhY2lhbCBkZSB1bmEgbyBtw6FzIHZhcmlhYmxlcyBlc3BlY8OtZmljYXMsIGNvbW8gbGEgZmVydGlsaWRhZCBkZWwgc3VlbG8gbyBlbCByZW5kaW1pZW50by4nLAogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgdGVybWlubzogJ1JpZWdvIGF1dG9tYXRpemFkbycsCiAgICAgICAgICBzaWduaWZpY2FkbzoKICAgICAgICAgICAgJ1Npc3RlbWEgcXVlIGFqdXN0YSBhdXRvbcOhdGljYW1lbnRlIGxhIGNhbnRpZGFkIHkgZnJlY3VlbmNpYSBkZSByaWVnbyBlbiBmdW5jacOzbiBkZSBkYXRvcyBlbiB0aWVtcG8gcmVhbCByZWNvcGlsYWRvcyBwb3Igc2Vuc29yZXMgZGUgaHVtZWRhZCB5IGNsaW1hLicsCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICB0ZXJtaW5vOiAnU2Vuc29yZXMgSW9UJywKICAgICAgICAgIHNpZ25pZmljYWRvOgogICAgICAgICAgICAnRGlzcG9zaXRpdm9zIGNvbmVjdGFkb3MgYSBpbnRlcm5ldCBxdWUgcmVjb3BpbGFuIHkgdHJhbnNtaXRlbiBkYXRvcyBlbiB0aWVtcG8gcmVhbCBzb2JyZSB2YXJpYWJsZXMgYW1iaWVudGFsZXMgeSBkZWwgc3VlbG8uJywKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgIHRlcm1pbm86ICdTaXN0ZW1hIGRlIEluZm9ybWFjacOzbiBHZW9ncsOhZmljYSAoU0lHKScsCiAgICAgICAgICBzaWduaWZpY2FkbzoKICAgICAgICAgICAgJ0hlcnJhbWllbnRhIHF1ZSBwZXJtaXRlIHJlY29waWxhciwgYW5hbGl6YXIgeSB2aXN1YWxpemFyIGRhdG9zIGdlb2VzcGFjaWFsZXMsIGZhY2lsaXRhbmRvIGxhIHRvbWEgZGUgZGVjaXNpb25lcyBlbiBmdW5jacOzbiBkZSBsYSB2YXJpYWJpbGlkYWQgZXNwYWNpYWwuJywKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgIHRlcm1pbm86ICdTaXN0ZW1hIGRlIFBvc2ljaW9uYW1pZW50byBHbG9iYWwgKEdQUyknLAogICAgICAgICAgc2lnbmlmaWNhZG86CiAgICAgICAgICAgICdUZWNub2xvZ8OtYSBxdWUgdXRpbGl6YSB1bmEgcmVkIGRlIHNhdMOpbGl0ZXMgcGFyYSBkZXRlcm1pbmFyIGNvbiBwcmVjaXNpw7NuIGxhIHViaWNhY2nDs24gZ2VvZ3LDoWZpY2EgZGUgdW4gb2JqZXRvIGVuIGxhIHN1cGVyZmljaWUgdGVycmVzdHJlLicsCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICB0ZXJtaW5vOiAnVmFyaWFiaWxpZGFkIGVzcGFjaWFsJywKICAgICAgICAgIHNpZ25pZmljYWRvOgogICAgICAgICAgICAnRGlmZXJlbmNpYXMgZW4gbGFzIHByb3BpZWRhZGVzIGRlbCBzdWVsbywgY2xpbWEgbyBjdWx0aXZvIGRlbnRybyBkZSB1bmEgbWlzbWEgdW5pZGFkIHByb2R1Y3RpdmEuJywKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgIHRlcm1pbm86ICdWYXJpYWJpbGlkYWQgdGVtcG9yYWwnLAogICAgICAgICAgc2lnbmlmaWNhZG86CiAgICAgICAgICAgICdDYW1iaW9zIGVuIGxhcyBjb25kaWNpb25lcyBhbWJpZW50YWxlcyB5IGRlbCBjdWx0aXZvIHF1ZSBvY3VycmVuIGEgbG8gbGFyZ28gZGVsIHRpZW1wbywgY29tbyB2YXJpYWNpb25lcyBlc3RhY2lvbmFsZXMgbyBjbGltw6F0aWNhcy4nLAogICAgICAgIH0sCiAgICAgIF0sCiAgICB9CiAgfSwKICBjb21wdXRlZDogewogICAgb3JkZXJlZERhdGEoKSB7CiAgICAgIGNvbnN0IG5ld0dsb3NhcmlvRGF0YSA9IFsuLi50aGlzLmdsb3NhcmlvRGF0YV0KICAgICAgbmV3R2xvc2FyaW9EYXRhLmZvckVhY2goZWxlbWVudCA9PiB7CiAgICAgICAgZWxlbWVudC5zaWduaWZpY2FkbyA9CiAgICAgICAgICBlbGVtZW50LnNpZ25pZmljYWRvLmNoYXJBdCgwKS50b0xvd2VyQ2FzZSgpICsKICAgICAgICAgIGVsZW1lbnQuc2lnbmlmaWNhZG8uc2xpY2UoMSkKICAgICAgfSkKCiAgICAgIGNvbnN0IHNvcnRlZERhdGEgPSBbLi4ubmV3R2xvc2FyaW9EYXRhXS5yZWR1Y2UoKHIsIGUpID0+IHsKICAgICAgICBjb25zdCBsZXRyYSA9IHRoaXMucXVpdGFyQWNlbnRvcyhlLnRlcm1pbm8udG9Mb3dlckNhc2UoKSlbMF0KICAgICAgICBpZiAoIXJbbGV0cmFdKSByW2xldHJhXSA9IHsgbGV0cmEsIHRlcm1pbm9zOiBbZV0gfQogICAgICAgIGVsc2UgcltsZXRyYV0udGVybWlub3MucHVzaChlKQogICAgICAgIHJldHVybiByCiAgICAgIH0sIHt9KQoKICAgICAgY29uc3Qgc29sb0xldHJhcyA9IE9iamVjdC5rZXlzKHNvcnRlZERhdGEpLnNvcnQoKQogICAgICBjb25zdCBuZXdTb3J0ZWREYXRhID0gW10KCiAgICAgIHNvbG9MZXRyYXMuZm9yRWFjaChlbGVtZW50ID0+IHsKICAgICAgICBjb25zdCBsZXRyYU9iaiA9IHNvcnRlZERhdGFbZWxlbWVudF0KICAgICAgICBsZXQgdGVybWlub3MgPSBsZXRyYU9iai50ZXJtaW5vcwoKICAgICAgICBpZiAodGVybWlub3MubGVuZ3RoID4gMSkgewogICAgICAgICAgY29uc3QgdGVybWlub3NPcmRlbmFkb3MgPSBbXQogICAgICAgICAgY29uc3Qgc29sb1Rlcm1pbm9zID0gbGV0cmFPYmoudGVybWlub3MKICAgICAgICAgICAgLm1hcCh0ZXJtT2JqID0+IHRlcm1PYmoudGVybWlubykKICAgICAgICAgICAgLnNvcnQoKGEsIGIpID0+IHsKICAgICAgICAgICAgICBjb25zdCBhbiA9IHRoaXMucXVpdGFyQWNlbnRvcyhhKS50b0xvd2VyQ2FzZSgpCiAgICAgICAgICAgICAgY29uc3QgYm4gPSB0aGlzLnF1aXRhckFjZW50b3MoYikudG9Mb3dlckNhc2UoKQogICAgICAgICAgICAgIGlmIChhbiA8IGJuKSByZXR1cm4gLTEKICAgICAgICAgICAgICBpZiAoYm4gPCBhbikgcmV0dXJuIDEKICAgICAgICAgICAgICByZXR1cm4gMAogICAgICAgICAgICB9KQogICAgICAgICAgc29sb1Rlcm1pbm9zLmZvckVhY2godGVybSA9PiB7CiAgICAgICAgICAgIHRlcm1pbm9zT3JkZW5hZG9zLnB1c2goCiAgICAgICAgICAgICAgdGVybWlub3MuZmluZCh0ZXJtaW5vID0+IHRlcm1pbm8udGVybWlubyA9PT0gdGVybSksCiAgICAgICAgICAgICkKICAgICAgICAgIH0pCiAgICAgICAgICB0ZXJtaW5vcyA9IHRlcm1pbm9zT3JkZW5hZG9zCiAgICAgICAgfQogICAgICAgIG5ld1NvcnRlZERhdGEucHVzaCh7CiAgICAgICAgICBsZXRyYTogbGV0cmFPYmoubGV0cmEudG9VcHBlckNhc2UoKSwKICAgICAgICAgIHRlcm1pbm9zOiB0ZXJtaW5vcywKICAgICAgICB9KQogICAgICB9KQogICAgICByZXR1cm4gbmV3U29ydGVkRGF0YQogICAgfSwKICB9LAp9Cg=="},{"version":3,"sources":["Glosario.vue"],"names":[],"mappings":";AAkfile":"Glosario.vue","sourceRoot":"src/views","sourcesContent":["<template lang=\"pug\">\n.curso-main-container.glosario\n  BannerInterno(icono=\"fas fa-atlas\" titulo=\"Glosario\")\n  .container.tarjeta.tarjeta--blanca.p-4.p-md-5.mb-5\n    .glosario__letra-item.mb-2(v-for=\"letra in orderedData\" :key=\"'letra-'+letra.letra\")\n      .glosario__letra-item__letra.me-4\n        .glosario__letra-item__letra__icono\n          span {{letra.letra}}\n      .glosario__letra-item__texto\n        p.mb-3(v-for=\"termino in letra.terminos\")\n          strong\n            i.lista-ul__vineta\n          strong(v-html=\"termino.terminoHtml || termino.termino\") \n          strong : \n          span(v-html=\"termino.significado\")\n</template>\n\n<script>\nimport plantillaMixins from '@/js/plantillaMixins'\nexport default {\n  name: 'Glosario',\n  mixins: [plantillaMixins],\n  data() {\n    return {\n      glosarioData: [\n        {\n          termino: 'Agricultura de precisión',\n          significado:\n            'Sistema de gestión agrícola que utiliza tecnologías como SIG, GPS y sensores IoT para recopilar, procesar y analizar datos en tiempo real, optimizando recursos.',\n        },\n        {\n          termino: 'Agricultura sostenible',\n          significado:\n            'Prácticas agrícolas que buscan optimizar el uso de recursos naturales y reducir el impacto ambiental, garantizando la productividad a largo plazo.',\n        },\n        {\n          termino: 'Geoestadística',\n          significado:\n            'Rama de la estadística que analiza y modela la distribución de variables en el espacio, utilizada para estudiar la variabilidad espacial en la agricultura.',\n        },\n        {\n          termino: 'Interpolación IDW',\n          significado:\n            'Método de estimación que asigna valores a puntos desconocidos basándose en la distancia a puntos conocidos, suponiendo que los puntos más cercanos son más similares.',\n        },\n        {\n          termino: 'Kriging',\n          significado:\n            'Técnica de interpolación geoestadística que no solo estima valores desconocidos, sino que también mide la incertidumbre de dichas estimaciones.',\n        },\n        {\n          termino: 'Mapas temáticos',\n          significado:\n            'Representaciones gráficas generadas en SIG que muestran la distribución espacial de una o más variables específicas, como la fertilidad del suelo o el rendimiento.',\n        },\n        {\n          termino: 'Riego automatizado',\n          significado:\n            'Sistema que ajusta automáticamente la cantidad y frecuencia de riego en función de datos en tiempo real recopilados por sensores de humedad y clima.',\n        },\n        {\n          termino: 'Sensores IoT',\n          significado:\n            'Dispositivos conectados a internet que recopilan y transmiten datos en tiempo real sobre variables ambientales y del suelo.',\n        },\n        {\n          termino: 'Sistema de Información Geográfica (SIG)',\n          significado:\n            'Herramienta que permite recopilar, analizar y visualizar datos geoespaciales, facilitando la toma de decisiones en función de la variabilidad espacial.',\n        },\n        {\n          termino: 'Sistema de Posicionamiento Global (GPS)',\n          significado:\n            'Tecnología que utiliza una red de satélites para determinar con precisión la ubicación geográfica de un objeto en la superficie terrestre.',\n        },\n        {\n          termino: 'Variabilidad espacial',\n          significado:\n            'Diferencias en las propiedades del suelo, clima o cultivo dentro de una misma unidad productiva.',\n        },\n        {\n          termino: 'Variabilidad temporal',\n          significado:\n            'Cambios en las condiciones ambientales y del cultivo que ocurren a lo largo del tiempo, como variaciones estacionales o climáticas.',\n        },\n      ],\n    }\n  },\n  computed: {\n    orderedData() {\n      const newGlosarioData = [...this.glosarioData]\n      newGlosarioData.forEach(element => {\n        element.significado =\n          element.significado.charAt(0).toLowerCase() +\n          element.significado.slice(1)\n      })\n\n      const sortedData = [...newGlosarioData].reduce((r, e) => {\n        const letra = this.quitarAcentos(e.termino.toLowerCase())[0]\n        if (!r[letra]) r[letra] = { letra, terminos: [e] }\n        else r[letra].terminos.push(e)\n        return r\n      }, {})\n\n      const soloLetras = Object.keys(sortedData).sort()\n      const newSortedData = []\n\n      soloLetras.forEach(element => {\n        const letraObj = sortedData[element]\n        let terminos = letraObj.terminos\n\n        if (terminos.length > 1) {\n          const terminosOrdenados = []\n          const soloTerminos = letraObj.terminos\n            .map(termObj => termObj.termino)\n            .sort((a, b) => {\n              const an = this.quitarAcentos(a).toLowerCase()\n              const bn = this.quitarAcentos(b).toLowerCase()\n              if (an < bn) return -1\n              if (bn < an) return 1\n              return 0\n            })\n          soloTerminos.forEach(term => {\n            terminosOrdenados.push(\n              terminos.find(termino => termino.termino === term),\n            )\n          })\n          terminos = terminosOrdenados\n        }\n        newSortedData.push({\n          letra: letraObj.letra.toUpperCase(),\n          terminos: terminos,\n        })\n      })\n      return newSortedData\n    },\n  },\n}\n</script>\n\n<style lang=\"sass\">\n.glosario\n  &__letra-item\n    display: flex\n    &__texto\n      padding-top: 5px\n    &__letra\n      &__icono\n        width: 32px\n        height: 32px\n        position: relative\n        line-height: 1em\n        border-radius: 50%\n        background-color: $color-sistema-d\n\n        span\n          position: absolute\n          left: 50%\n          top: 50%\n          transform: translate(-50%,-50%)\n          font-size: 1.1em\n          font-weight: $base-black-font-weight\n</style>\n"]}]}